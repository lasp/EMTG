#EMTGv9 .emtgopt file version 2

#mission name
mission_name PeriapseArrival_IncomingBplaneRpTA_testatron
#objective function type
#0: minimum deltaV
#1: minimum time
#2: maximum final mass
#3: maximize initial mass
#4: depart as late as possible in the window
#5: depart as early as possible in the window
#6: maximize orbit energy
#7: minimize launch mass
#8: arrive as early as possible
#9: arrive as late as possible
#10: <PLACEHOLDER FOR FUTURE OBJECTIVE FUNCTIONS>
#11: maximum dry/wet ratio
#12: maximum arrival kinetic energy
#13: minimum BOL power
#14: maximize log_10(final mass)
#15: maximum log_e(final mass)
#16: maximum dry mass margin
#17: maximum dry mass
#18: maximum log_10(dry mass)
#19: maximum log_e(dry mass)
#20: minimize chemical fuel
#21: minimize chemical oxidizer
#22: minimize electric propellant
#23: minimize total propellant
#24: minimize waypoint tracking error
#25: minimize initial impulse magnitude
#26: maximize distance from central body
objective_type 17
#Journey associated with objective function (if applicable)
objective_journey 0
#Include the initial impulse in calculating the delta-v objective function?
include_initial_impulse_in_cost 0
#0: unbounded, 1: bounded total time (note that the global arrival date bound is by definition the same as the last journey's arrival date bound and is not duplicated
global_timebounded 1
#launch window open date (MJD)
launch_window_open_date 63672
#flight time bounds (days)
total_flight_time_bounds 0 3287.25
#DLA in degrees
DLA_bounds -28.5 28.5
#RLA in degrees
RLA_bounds -2880 2880
#phase type
#0: MGALTS
#1: FBLTS
#2: MGALT
#3: FBLT
#4: PSBI
#5: PSFB
#6: MGAnDSMs
#7: CoastPhase
#8: SundmanCoastPhase
#9: variable phase type
#10: ProbeEntryPhase
#11: ControlLawThrustPhase
mission_type 9
#NLP solver type
#0: SNOPT
#1: WORHP
NLP_solver_type 0
#NLP solver mode
#0: find feasible point only
#1: find optimal solution
#2: satisfy equality constraints
NLP_solver_mode 1
#Quiet NLP solver?
quiet_NLP 0
#Enable ACE feasible point finder?
ACE_feasible_point_finder 0
#Write every hop to the MBH archive, even if it is not an improvement?
MBH_always_write_archive 0
#include state vector in MBH archive file?
MBH_archive_state_vector 0
#quantity Max_not_improve for MBH
MBH_max_not_improve 10000
#maximum number of trials for MBH
MBH_max_trials 1000000
#maximum run time for MBH, in seconds
MBH_max_run_time 200
#Maximum step size (uniform) or scale factor (other distributions)
MBH_max_step_size 1
#MBH hop probabilty distribution
#0: uniform
#1: Cauchy
#2: Pareto
#3: Gaussian
MBH_hop_distribution 2
#Pareto distribution alpha
MBH_Pareto_alpha 1.3999999999999999112
#Write every MBH improvement for later animation?
MBH_write_every_improvement 0
#probability of MBH time hop operation
MBH_time_hop_probability 0
#feasibility tolerance
snopt_feasibility_tolerance 1.0000000000000000818e-05
#optimality tolerance
snopt_optimality_tolerance 1.0000000000000000818e-05
#NLP max step
NLP_max_step 1
#NLP major iterations
snopt_major_iterations 8000
#NLP minor iterations
snopt_minor_iterations 500
#NLP max run time (seconds)
snopt_max_run_time 15
#Enable Scalatron?
enable_Scalatron 1
#Enable NLP chaperone?
enable_NLP_chaperone 1
#Seed MBH?
seed_MBH 1
#Skip first NLP run in an MBH process?
skip_first_nlp_run 0
#Stop NLP on goal attain?
NLP_stop_on_goal_attain 0
#Objective value at which NLP stops
NLP_objective_goal 0
#Within an NLP run, how frequently do we check to see if we have found a feasible solution with a better objective function value than we have written out before, and, if true, write it to file? (seconds) ONLY WORKS IF NLP CHAPERONE IS ACTIVE.
NLP_write_output_check_time 1000000
#MBH RNG seed (negative number means system clock)
MBH_RNG_seed -1
#Print NLP movie frames?
print_NLP_movie_frames 0
#Quiet MBH?
quiet_basinhopping 0
#SPICE leap seconds kernel - required for SPICE to work
SPICE_leap_seconds_kernel naif0012.tls
#SPICE_reference_frame_kernel
SPICE_reference_frame_kernel pck00010.tpc
#Universe folder
universe_folder C:/emtg/testatron/universe/
#0: static, 1: SPICE (default to static if no SPICE file supplied for a body), 2: SplineEphem
ephemeris_source 2
#How many sample points should SplineEphem use per orbital period of each body?
SplineEphem_points_per_period 360
#How many sample points should SplineEphem use per orbital period of the sun with respect to the central body?
SplineEphem_non_central_body_sun_points_per_period 10000
#Truncate SplineEphem at maximum mission epoch?
#If you enable this option, global search will be impeded but you will save a lot of memory
#Useful for monte-carlo, launch period analysis, etc.
SplineEphem_truncate_ephemeris_at_maximum_mission_epoch 0
#Beginning of the SplineEphem data set
earliestPossibleEpoch 60676
#End of the SplineEphem data set
latestPossibleEpoch 77112
#Propagator type
#0: Keplerian propagator
#1: Integrated propagator
propagatorType 0
#Integrator type
#0: rk7813M adaptive step
#1: rk8 fixed step
integratorType 1
#adaptive step integrator tolerance
integrator_tolerance 1.0000000000000000209e-08
#integration step size (maximum for adaptive, fixed for fixed)
integration_time_step_size 86400
#number of timesteps per phase
num_timesteps 20
#number of spiral segments
spiral_segments 1
#Allow the mass at the beginning of the first journey to vary up to the allowed maximum?
allow_initial_mass_to_vary 1
#maximum possible mass of the spacecraft (kg)
maximum_mass 15000
#specific impulse of the engine used for low-thrust maneuvers
IspLT 3000
#minimum specific impulse for variable specific impulse problems
IspLT_minimum 1
#specific impulse of the engine used for impulsive maneuvers
IspChem 324
#thrust of the spacecraft, in Newtons
Thrust 0.10000000000000000555
#LV margin (as a fraction)
LV_margin 0
#LV adapter mass (kg)
LV_adapter_mass 0
#low-thrust engine type
#0: fixed thrust/Isp
#1: constant Isp, efficiency, EMTG computes input power
#2: choice of power model, constant efficiency, EMTG chooses Isp
#3: choice of power model, constant efficiency and Isp
#4: continuously-varying specific impulse
#5: custom thrust and mass flow rate polynomial
#6: NSTAR
#7: XIPS-25
#8: BPT-4000 High-Isp
#9: BPT-4000 High-Thrust
#10: BPT-4000 Ex-High-Isp
#11: NEXT high-Isp v9
#12: VASIMR (argon, using analytical model)
#13: Hall Thruster (Xenon, using analytical model)
#14: NEXT high-ISP v10
#15: NEXT high-thrust v10
#16: BPT-4000 MALTO
#17: NEXIS Cardiff 8-15-201
#18: H6MS Cardiff 8-15-2013
#19: BHT20K Cardiff 8-16-2013
#20: Aerojet HiVHAC EM
#21: 13 kW STMD Hall high-Isp (not available in open-source)
#22: 13 kW STMD Hall high-thrust (not available in open-source)
#23: NEXT TT11 High-Thrust
#24: NEXT TT11 High-Isp
#25: NEXT TT11 Expanded Throttle Table
#26: 13 kW STMD Hall high-Isp 10-1-2014 (not available in open-source)
#27: 13 kW STMD Hall medium-thrust 10-1-2014 (not available in open-source)
#28: 13 kW STMD Hall high-thrust 10-1-2014 (not available in open-source)
#29: 2D Throttle table
#30: 1D Throttle table high-thrust
#31: 1D Throttle table high-Isp
#32: 2D polynomial fit
engine_type 5
#number of thruster systems (used to be called number of engines)
number_of_electric_propulsion_systems 1
#percentage of time that engine can operate
engine_duty_cycle 1
#duty cycle type
#0: averaged
#1: realistic
duty_cycle_type 0
#scale factor to apply to thrust ONLY, not mass flow rate, can use to approximate cosine loss
thrust_scale_factor 1
#Power at 1 AU (kW)
power_at_1_AU 5
#power source type. Choices are 0 - fixed, 1 - solar
power_source_type 1
#Solar power model type
#0: classic Sauer model
#1: polynomial (0th order on the left)
solar_power_model_type 0
#solar power coefficients gamma_1 through gamma_5, if all gamma = [1 0 0 0 0], then solar power is a simple 1/r^2
solar_power_gamma 1.3207699999999999996 -0.1084799999999999931 -0.11665000000000000369 0.10842999999999999861 -0.012789999999999999286 0 0
#power margin (fraction)
power_margin 0
#power system decay rate (fraction per year)
power_decay_rate 0
#reference date when the power system begins to decay
power_system_decay_reference_epoch 51544.5
#Throttle sharpness (higher means more precise, lower means smoother)
throttle_sharpness 100
#Throttle logic mode
#0: maximum number of thrusters
#1: minimum number of thrusters
throttle_logic_mode 1
#spacecraft power coefficients A, B, and C
#represent the power requirements of the spacecraft at a distance r from the sun
#i.e. heaters, communications, etc
spacecraft_power_coefficients 0 0 0
#thrust polynomial coefficients
engine_input_thrust_coefficients 26.337458999999999065 -51.69439299999999804 90.486508999999998082 -36.720292999999998074 5.1456020000000002312 0 0
#mass flow rate polynomial coefficients
engine_input_mass_flow_rate_coefficients 2.5059999999999997833 -5.356799999999999784 6.2538999999999997925 -2.5371999999999998998 0.36985000000000001208 0 0
#thruster input power bounds (kW)
engine_input_power_bounds 0.5250000000000000222 2.6000000000000000888
#Propulsion system efficiency (fraction)
user_defined_engine_efficiency 0.69999999999999995559
#spacecraft power model type
#0: P_sc = A + B/r + C/r^2
#1: P_sc = A if P > A, A + B(C - P) otherwise
spacecraft_power_model_type 0
#Isp for TCMs
TCM_Isp 324
#TCM magnitude post-launch (km/s)
TCM_post_launch 0
#TCM magnitude before flybys (km/s)
TCM_pre_flyby 0
#Post-DSM TCM magnitude as a fraction of DSM magnitude
TCM_maneuver_fraction 0
#Track ACS propellant consumption?
trackACS 0
#ACS propellant consumption (kg/day)
ACS_kg_per_day 0
#Bounds on final mass constraints
final_mass_constraint_bounds 0 0
#Constrain final wet mass?
constrain_final_mass 0
#Constrain dry mass?
constrain_dry_mass 0
#Constrain electric propellant tank?
enable_electric_propellant_tank_constraint 0
#Electric propellant tank capacity (kg)
maximum_electric_propellant 1000
#Electric propellant margin (fraction)
electric_propellant_margin 0
#Constrain chemical propellant?
enable_chemical_propellant_tank_constraint 0
#Chemical fuel tank capacity (kg)
maximum_chemical_fuel 1000
#Chemical oxidizer tank capacity (kg)
maximum_chemical_oxidizer 1000
#Bipropellant mixture ratio
bipropellant_mixture_ratio 0.92500000000000004441
#Chemical propellant margin (fraction)
chemical_propellant_margin 0.10000000000000000555
#Spacecraft object input type
#0: Assemble from libraries
#1: Read .emtg_spacecraftoptions file
#2: Assemble from missionoptions object
SpacecraftModelInput 2
#HardwarePath
HardwarePath C:/emtg/testatron/HardwareModels/
#ThrottleTableFile
ThrottleTableFile empty.ThrottleTable
#LaunchVehicleLibraryFile
LaunchVehicleLibraryFile NLSII_August2018.emtg_launchvehicleopt
#PowerSystemsLibraryFile
PowerSystemsLibraryFile default.emtg_powersystemsopt
#PropulsionSystemsLibraryFile
PropulsionSystemsLibraryFile 4_18_2017.emtg_propulsionsystemopt
#SpacecraftOptionsFile
SpacecraftOptionsFile default.emtg_spacecraftopt
#LaunchVehicleKey
LaunchVehicleKey Falcon_Heavy_(RecoveryAug2018)
#PowerSystemKey
PowerSystemKey 5kW_basic
#ElectricPropulsionSystemKey
ElectricPropulsionSystemKey NSTAR
#ChemicalPropulsionSystemKey
ChemicalPropulsionSystemKey DefaultChemicalPropulsionSystem
#solar radiation pressure?
perturb_SRP 0
#third body perturbations?
perturb_thirdbody 0
#J2?
perturb_J2 0
#spacecraft area (for SRP, in m^2)
spacecraft_area 70
#Coefficient of reflectivity
coefficient_of_reflectivity 1
#Percentage of the Sun seen by the spacecraft
solar_percentage 1
#Solar constant (flux density at 1 AU) [W/m^2 = kg/s^3]
solar_flux 1359.3900000000001
#Speed of light in a vacuum [m/s]
speed_of_light_vac 299792458
#Forced post-launch coast, in days
forced_post_launch_coast 30
#Forced pre-flyby coast, in days
forced_pre_flyby_coast 0
#Forced post-flyby coast, in days
forced_post_flyby_coast 0
#Path to waypoint file
waypoint_file_path ./banana.ephemeris
#Path to covariance file
covariance_file_path ./shampoo_bottle.ephemeris
#state representation for parallel shooting (Cartesian, SphericalRADEC, SphericalAZFPA, COE, MEE)
ParallelShootingStateRepresentation 1
#state representation for periapse boundary conditions (Cartesian, SphericalRADEC, SphericalAZFPA, COE, MEE, IncomingBplane, OutgoingBplane, IncomingBplaneRpTA, OutgoingBplaneRpTA)
PeriapseBoundaryStateRepresentation 7
#state representation for parallel shooting constraints (Cartesian or same as encoded states)
ParallelShootingConstraintStateRepresentation 0
#Write only options that are *not* default into the .emtgopt file?
print_only_non_default_options 0
#reference frame for output file (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar)
output_file_frame 0
#Override default output file name?
override_default_output_file_name 0
#User-defined output file name
forced_output_file_name forced_output_file_name
#Output ephemeris for time spent waiting between journeys?
output_dormant_journeys 0
#How long to output an ephemeris after the mission end (days)
post_mission_wait_time 0
#Override the working directory?
override_working_directory 1
#User-defined working directory
forced_working_directory C:/emtg/testatron/tests/state_representation_tests
#Create a mission subfolder?
override_mission_subfolder 1
#Mission subfolder
forced_mission_subfolder .
#Shorten output file names?
short_output_file_names 1
#Generate forward-integrated ephemeris?
generate_forward_integrated_ephemeris 0
#Consecutive lines in ephemeris file separated by less than this amount of time will be removed when the clean ephemeris file is created. (Seconds)
forward_integrated_ephemeris_minimum_timestep_kept 120
#SPICE ID of central body for forward integrated ephemeris
forward_integrated_ephemeris_central_body_SPICE_ID 10
#Add control switch line to ephemeris?
add_control_switch_line_to_ephemeris 0
#Append mass to ephemeris output?
append_mass_to_ephemeris_output 0
#Append control vector to ephemeris output?
append_control_to_ephemeris_output 0
#Append thrust magnitude to ephemeris output?
append_thrust_to_ephemeris_output 0
#Append mass flow rate to ephemeris output?
append_mdot_to_ephemeris_output 0
#Append Isp to ephemeris output?
append_Isp_to_ephemeris_output 0
#Append active power to ephemeris output?
append_active_power_to_ephemeris_output 0
#Append number of active propulsion systems to ephemeris output?
append_number_of_active_engines_to_ephemeris_output 0
#Append throttle level to ephemeris output?
append_throttle_level_to_ephemeris_output 0
#Generate bsp?
call_system_to_generate_bsp 0
#Where are spice utilities?
spice_utilities_path c:/utilities/cspice/exe
#Spice utility extension
spice_utility_extension .exe
#PyEMTG path
pyemtg_path c:/emtg/PyEMTG/
#SPICE ID of spacecraft
spacecraft_SPICE_ID -52284
#Close program after completion?
background_mode 1
#Output STMs?
output_STMs 0
#Output maneuver and target spec files?
output_maneuver_and_target_spec_files 0
#generates a complete output of all acceleration model data at each integration time step (only works for numerically integrated trajectories
generate_acceleration_model_instrumentation_file 0
#Stop after a particular journey? (if this value is greater than the number of journeys, do the whole mission)
stop_after_journey 32767
#which inner loop solver to run?
#0: none, evaluate trialX
#1: run MBH
#2: run constrained DE
#3: run NLP using trialX as initial guess
#4: filament walker
run_inner_loop 0
#Should EMTG check the feasibility tolerance of the initial guess when running in MBH mode and skip the NLP solve for that iteration if the feasibility tolerance is greater than feasibilityTolInMBHToSkipNLP?
checkFeasibilityTolInMBHToSkipNLP 1
#If checkFeasibilityTolInMBHToSkipNLP is true, then we skip the NLP solve for any MBH iteration whose initial feasibility is greater than the value of this option.
feasibilityTolInMBHToSkipNLP 10
#Maximum number of hops without improving objective function before trying a random point when the guess is worse than the skip-NLP-solve-tolerance and checkFeasibilityTolInMBHToSkipNLP is true.
MBH_max_not_improve_with_NLP_skip 10000
#Check derivatives using NLP finite differencing?
check_derivatives 0
#Field for taking notes
user_data 


BEGIN_JOURNEY
#Journey name
journey_name Earth_to_SOI
#Journey central body name
journey_central_body Sun_SaturnOrientation
#destination list, as indices from the Universe file
destination_list 3 13
#flyby sequence, as indices from the Universe file
sequence 2 2 3
#phase type
#0: MGALTS
#1: FBLTS
#2: MGALT
#3: FBLT
#4: PSBI
#5: PSFB
#6: MGAnDSMs
#7: CoastPhase
#8: SundmanCoastPhase
#9: variable (do not use)
#10 ProbeEntryPhase
#11 ControlLawThrustPhase
phase_type 6
#impulses per phase
impulses_per_phase 1
#Thrust control law
#0: Cartesian (not implemented)
#1: velocity direction
#2: anti-velocity direction
thrust_control_law 1
#Force unit magnitude control?
#0: free control magnitude
#1: force unit magnitude
#2: force zero magnitude
force_unit_magnitude_control 0
#Force fixed inertial control? All control vectors in a phase must be identical if this is selected.
force_fixed_inertial_control 0
#Override this journey's number of steps?
override_num_steps 0
#Number of time steps for this journey, if overriden
number_of_steps 20
#Journey override global duty cycle
override_duty_cycle 0
#Journey duty cycle
duty_cycle 1
#override propagator type?
override_PropagatorType 0
#propagator type
propagatorType 1
#Override global integration step size?
override_integration_step_size 0
#integration step size (s)
integration_step_size 86400
#Override journey flyby altitude?
override_flyby_altitude_bounds 0
#Lower and upper bound on journey flyby altitude, if override is active (only applies to the departure flyby, if there is one)
flyby_altitude_bounds 300 1000000
#Override journey periapse arrival altitude?
PeriapseArrival_override_altitude 0
#Lower and upper bound on journey periapse arrival altitude, if override is active (km)
PeriapseArrival_altitude_bounds 300 1000000
#PeriapseDeparture altitude bounds (in km)
PeriapseDeparture_altitude_bounds 185 185
#number of interior control points for parallel shooting phase types
num_interior_control_points 1
#coast phase match point fraction
CoastPhaseMatchPointFraction 0.5
#coast phase forward integration step length (seconds)
CoastPhaseForwardIntegrationStepLength 86400
#coast phase backward integration step length (seconds)
CoastPhaseBackwardIntegrationStepLength 86400
#Journey-end TCM magnitude (km/s)
journey_end_TCM 0
#Enable periapse burns in ephemeris pegged flybys?
enable_periapse_burns 0
#Bound the departure epoch?
bounded_departure_date 0
#does the journey have time bounds?
#0: unbounded
#1: bounded flight time
#2: bounded arrival date
#3: bounded aggregate flight time
timebounded 0
#Journey departure epoch bounds (MJD, two entries)
departure_date_bounds 0 0
#Journey wait time bounds (days)
wait_time_bounds 0 0.99900000000000011013
#Journey flight time bounds (days)
flight_time_bounds 0 0
#Journey arrival date bounds (MJD, two entries)
arrival_date_bounds 51544.5 60000
#journey departure type
#0: launch or direct insertion
#1: depart from parking orbit (you can use this one in place of a launch vehicle model, and the departure burn will be done with the EDS motor)
#2: free direct departure, i.e. do not burn to get the departure v_infinity (used for when operations about a small body are not modeled but the departure velocity is known)
#3: flyby (only valid for successive journeys)
#4: flyby with fixed v-infinity-out (only valid for successive journeys)
#5: spiral-out from circular orbit (low-thrust missions only)
#6: zero-turn flyby (for small bodies)
departure_type 0
#what are the bounds on the initial impulse for each journey in km/s\
#you can set a very high upper bound if you are using a launchy vehicle model - the optimizer will find the correct value
initial_impulse_bounds 0 4.3645800000000001262
#Force free point direct insertion burn to be along the inertial velocity vector?
force_free_point_direct_insertion_along_velocity_vector 0
#one entry for each element
departure_elements_vary_flag 0 0 0 0 0 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
departure_elements 0 0 0 0 0 0
#bounds on elements or state components, two entries for each element
departure_elements_bounds 0 0 0 0 0 0 0 0 0 0 0 0
#Reference epoch (MJD) for journey departure elements
departure_elements_reference_epoch 51544.5
#departure free point state representation (Cartesian, SphericalRADEC, SphericalAZFPA, COE, MEE, IncomingBplane, OutgoingBplane, IncomingBplaneRpTA, OutgoingBplaneRpTA)
departure_elements_state_representation 0
#reference frame for journey departure elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar, 8: SAM, 9: ObjectReferenced)
departure_elements_frame 0
#Allow journey departure free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyFreePointDepartureToPropagate 0
#upper bound on starting mass increment (negative number indicates mass drop) [kg]
maximum_starting_mass_increment 0
#lower bound on starting mass increment (negative number indicates mass drop) [kg]
minimum_starting_mass_increment 0
#starting mass increment (negative number indicates mass drop) [kg]
fixed_starting_mass_increment 0
#ending mass increment (negative number indicates mass drop) [kg]
fixed_ending_mass_increment 0
#Vary initial mass increment?
variable_mass_increment 0
#Constrain initial mass?
constrain_initial_mass 0
#If initial mass for this journey is constrained, enter the constraint value here.
maximum_initial_mass 0
#journey departure boundary class
#0: Ephemeris-pegged (default EMTG)
#1: Free point
#2: Ephemeris-referenced
#3: Periapse
departure_class 0
#journey departure ellipsoid axes (3)
departure_ellipsoid_axes 1.0000000000000000209e-08 1.0000000000000000209e-08 1.0000000000000000209e-08
#journey arrival type
#0: insertion into parking orbit (use chemical Isp)
#1: rendezvous (use chemical Isp)
#2: intercept with bounded V_infinity
#3: low-thrust rendezvous (does not work if terminal phase is not low-thrust)
#4: match final v-infinity vector
#5: match final v-infinity vector (low-thrust)
#6: capture spiral
#7: momentum transfer (kinetic impactor)
arrival_type 2
#one entry for each element
arrival_elements_vary_flag 0 0 0 0 0 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
arrival_elements 0 0 0 0 0 0
#bounds on elements or state components, two entries for each element
arrival_elements_bounds 0 0 0 0 0 0 0 0 0 0 0 0
#Reference epoch (MJD) for journey arrival elements
arrival_elements_reference_epoch 51544.5
#arrival free point state representation (Cartesian, SphericalRADEC, SphericalAZFPA, COE, MEE, IncomingBplane, OutgoingBplane, IncomingBplaneRpTA, OutgoingBplaneRpTA)
arrival_elements_state_representation 0
#reference frame for journey arrival elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar, 8: SAM, 9: ObjectReferenced)
arrival_elements_frame 0
#Allow journey arrival free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyFreePointArrivalToPropagate 0
#Bounds on this journey's final velocity (in km/s)
final_velocity 0 1000 0
#Journey forced terminal coast (in days)
forced_terminal_coast 0
#Journey forced initial coast (in days)
forced_initial_coast 30
#journey arrival boundary class
#0: Ephemeris-pegged (default EMTG)
#1: Free point
#2: Ephemeris-referenced
#3: Periapse
arrival_class 2
#journey arrival ellipsoid axes (3)
arrival_ellipsoid_axes 58378709.239326030016 58378709.239326030016 58378709.239326030016
#encounter distance (from center of object) for a zero-turn flyby (km)
zero_turn_flyby_distance 1000
#encounter distance (from center of object) for an ephemeris-pegged intercept (km)
terminal_intercept_flyby_distance 1000
#Starting orbital radius for an Edelbaum escape spiral (km)
escape_spiral_starting_radius 6678
#Final orbit radius for an Edelbaum capture spiral (km)
escape_spiral_final_radius 6678
#Final orbit radius for an Edelbaum capture spiral (km)
capture_spiral_final_radius 6678
#Starting orbital radius for an Edelbaum capture spiral (km)
capture_spiral_starting_radius 6678
#Print a target spec for free point arrival at the end of this journey?
FreePointArrival_print_target_spec 1
#Journey-end delta-v (km/s)
journey_end_deltav 0
#Propulsion system for journey-end maneuver
#0: Monoprop chemical
#1: Biprop chemical
#2: Electric
journey_end_propulsion_system 0
#Which bodies are used for third-body perturbation?
#Expressed as indices in the Universe file
perturbation_bodies
#Stage after departure?
stage_after_departure 0
#Stage before arrival?
stage_before_arrival 0
#Stage after arrival?
stage_after_arrival 0
#Freeze this journey's decision variables?
freeze_decision_variables 0
#SMA (in km) for ephemeris pegged orbit insertion
ephemeris_pegged_orbit_insertion_SMA 8023000
#ECC for ephemeris pegged orbit insertion
ephemeris_pegged_orbit_insertion_ECC 0.98999999999999999112
#Lower and upper bounds for ephemeris pegged orbit insertion Delta v (km/s)
ephemeris_pegged_orbit_insertion_dv_bounds 0 100
#Impact momentum enhancement factor for planetary defense (also called beta)
impact_momentum_enhancement_factor 1
#Aerodynamic drag?
perturb_drag 0
#spacecraft area (for aerodynamic drag, in m^2)
spacecraft_drag_area 70
#coefficient of drag, i.e. Cd (unitless)
coefficient_of_drag 2.2000000000000001776
#Atmospheric density model
AtmosphericDensityModelKey Exponential
#File defining atmospheric density model
AtmosphericDensityModelDataFile DoesNotExist.emtg_densityopt
#Include central body gravitational harmonics perturbations?
perturb_central_body_gravity_harmonics 0
#Maximum degree to include for central body gravitational harmonics
central_body_gravity_degree 2
#Maximum order to include for central body gravitational harmonics
central_body_gravity_order 0
#STK .grv style gravity model file
central_body_gravity_file C:/emtg/testatron/universe/gravity_files/DoesNotExist.grv
#Probe separation impulse (Ns)
probe_separation_impulse 1
#Probe mass (kg)
probe_mass 100
#one entry for each element
Probe_AEI_elements_vary_flag 0 0 0 0 0 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
Probe_AEI_elements 0 0 0 0 0 0
#bounds on elements or state components, two entries for each element
Probe_AEI_elements_bounds 0 0 0 0 0 0 0 0 0 0 0 0
#Reference epoch (MJD) for journey probe arrival elements
Probe_AEI_elements_reference_epoch 51544.5
#probe arrival free point state representation (Cartesian, SphericalRADEC, SphericalAZFPA, COE)
Probe_AEI_elements_state_representation 0
#reference frame for journey arrival elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar, 8: SAM)
Probe_AEI_elements_frame 0
#one entry for each element
Probe_End_elements_vary_flag 0 0 0 0 0 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
Probe_End_elements 0 0 0 0 0 0
#bounds on elements or state components, two entries for each element
Probe_End_elements_bounds 0 0 0 0 0 0 0 0 0 0 0 0
#Reference epoch (MJD) for journey probe arrival elements
Probe_End_elements_reference_epoch 51544.5
#probe arrival free point state representation (Cartesian, SphericalRADEC, SphericalAZFPA, COE)
Probe_End_elements_state_representation 0
#reference frame for journey arrival elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar, 8: SAM)
Probe_End_elements_frame 0
# or just final approach?
ModelProbeSecondPhase 0
#Allow probe AEI free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyProbeAEIToPropagate 0
#Allow probe end free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyProbeEndToPropagate 0
#Probe-spacecraft communication distance constraint (km)
probe_communication_distance_bounds 2000 10000
#Aerodynamic drag on probe from separation to AEI?
perturb_drag_probe_separation_to_AEI 0
#Aerodynamic drag on probe from AEI to end of probe mission?
perturb_drag_probe_AEI_to_end 0
#probe area prior to AEI (for aerodynamic drag, in m^2)
probe_drag_area_probe_separation_to_AEI 70
#probe area after AEI (for aerodynamic drag, in m^2)
probe_drag_area_probe_AEI_to_end 70
#probe coefficient of drag prior to AEI, i.e. Cd (unitless)
probe_coefficient_of_drag_probe_separation_to_AEI 2.2000000000000001776
#probe coefficient of drag after AEI, i.e. Cd (unitless)
probe_coefficient_of_drag_probe_AEI_to_end 2.2000000000000001776
#Bounds on the probe's final velocity at AEI (in km/s)
probe_AEI_velocity 0 100 0
#Bounds on the probe's final velocity at end of mission (in km/s)
probe_end_velocity 0 100 0
#probe separation to AEI match point fraction
ProbeSeparationToAEI_MatchPointFraction 0.5
#probe separation to AEI forward integration step length (seconds)
ProbeSeparationToAEI_ForwardIntegrationStepLength 86400
#probe separation to AEI backward integration step length (seconds)
ProbeSeparationToAEI_BackwardIntegrationStepLength 86400
#probe AEI to end match point fraction
ProbeAEI_to_end_MatchPointFraction 0.5
#probe AEI to end forward integration step length (seconds)
ProbeAEI_to_end_ForwardIntegrationStepLength 86400
#probe AEI to end backward integration step length (seconds)
ProbeAEI_to_end_BackwardIntegrationStepLength 86400
#Print a target spec for the probe state at the end of the first sub-phase?
Probe_AEI_print_target_spec 1
#Print a target spec for the probe state at the end of the second sub-phase?
Probe_end_print_target_spec 1
#Always print this journey's options to the .emtgopt file?
print_this_journey_options_no_matter_what 0
#Override default ephemeris output resolution?
override_ephemeris_output_resolution 0
#If overriding default ephemeris output resolution, this is the overriding value (seconds)
EphemerisOutputResolution 1

#Maneuver constraint code
#Works for absolute and relative epochs and also magnitudes
BEGIN_MANEUVER_CONSTRAINT_BLOCK
END_MANEUVER_CONSTRAINT_BLOCK


#Boundary constraint code
BEGIN_BOUNDARY_CONSTRAINT_BLOCK
p3_arrival+_VelocityDeclinationAnyBody_13_-90deg_90deg_TrueOfDateBCF
p0_arrival_PeriapseDistance_1km_10000000000km
p1_arrival_PeriapseDistance_1km_10000000000km
p2_arrival_PeriapseDistance_1km_10000000000km
p3_arrival_PeriapseDistance_1km_10000000000km
p4_arrival_PeriapseDistance_1km_10000000000km
p5_arrival_PeriapseDistance_1km_10000000000km
p6_arrival_PeriapseDistance_1km_10000000000km
p0_departure_PeriapseDistance_1km_10000000000km
p1_departure_PeriapseDistance_1km_10000000000km
p2_departure_PeriapseDistance_1km_10000000000km
p3_departure_PeriapseDistance_1km_10000000000km
p4_departure_PeriapseDistance_1km_10000000000km
p5_departure_PeriapseDistance_1km_10000000000km
p6_departure_PeriapseDistance_1km_10000000000km
END_BOUNDARY_CONSTRAINT_BLOCK


#Phase distance constraint code
BEGIN_PHASE_DISTANCE_CONSTRAINT_BLOCK
END_PHASE_DISTANCE_CONSTRAINT_BLOCK

#trial decision vector
BEGIN_TRIALX
p0MGAnDSMsEphemerisPeggedLaunchDirectInsertion: event left state epoch ,63672
p0MGAnDSMsEphemerisPeggedLaunchDirectInsertion: magnitude of outgoing velocity asymptote ,4.2813795372616407775
p0MGAnDSMsEphemerisPeggedLaunchDirectInsertion: RA of departure asymptote ,-24.017460135527326059
p0MGAnDSMsEphemerisPeggedLaunchDirectInsertion: DEC of departure asymptote ,0.4095144829490473537
p0MGAnDSMsEphemerisPeggedLaunchDirectInsertion: initial mass multiplier ,1
p0MGAnDSMs: phase flight time ,162.00856254272389378
p0MGAnDSMsEphemerisPeggedFlybyIn: event left state mass ,4044.1495221805544134
p0MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_x ,2.2795311004358111973
p0MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_y ,8.612691548400142949
p0MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_z ,1.3595183908982697574
p0MGAnDSMs: virtual chemical fuel ,0
p0MGAnDSMs: virtual chemical oxidizer ,0
p0MGAnDSMsForwardSubPhase0: burn index ,0.18517578165522960432
p0MGAnDSMsForwardSubPhase0: DSM x component ,-3.0012874866258698603e-05
p0MGAnDSMsForwardSubPhase0: DSM y component ,6.033504559965763292e-05
p0MGAnDSMsForwardSubPhase0: DSM z component ,1.9203292270120190301e-05
p0MGAnDSMsBackwardSubPhase0: burn index ,0.81482421834487051004
p1MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_x ,-2.4530130940491687852
p1MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_y ,7.8491999906735969716
p1MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_z ,3.6872477504848433227
p1MGAnDSMs: phase flight time ,404.28442990981614003
p1MGAnDSMsEphemerisPeggedFlybyIn: event left state mass ,3973.9423160646651922
p1MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_x ,-6.7316114120655043962
p1MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_y ,4.8068110301667417161
p1MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_z ,2.5887424161728560534
p1MGAnDSMs: virtual chemical fuel ,36.471275903637099702
p1MGAnDSMs: virtual chemical oxidizer ,33.735930210751519098
p1MGAnDSMsForwardSubPhase0: burn index ,0.50810843118298376631
p1MGAnDSMsForwardSubPhase0: DSM x component ,0.032687471291454883726
p1MGAnDSMsForwardSubPhase0: DSM y component ,-0.040265727488463909367
p1MGAnDSMsForwardSubPhase0: DSM z component ,-0.020186888288352022869
p1MGAnDSMsBackwardSubPhase0: burn index ,0.49189156881691598056
p2MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_x ,-0.62286479314040121835
p2MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_y ,7.8832112289846847375
p2MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_z ,3.5480464388734418435
p2MGAnDSMs: phase flight time ,797.99768985006573985
p2MGAnDSMsEphemerisPeggedFlybyIn: event left state mass ,3973.9423160690525947
p2MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_x ,1.5812831824158060101
p2MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_y ,13.140439517064834263
p2MGAnDSMsEphemerisPeggedFlybyIn: V_infinity_z ,7.761995717474924561
p2MGAnDSMs: virtual chemical fuel ,0
p2MGAnDSMs: virtual chemical oxidizer ,0
p2MGAnDSMsForwardSubPhase0: burn index ,0.16077103190185529358
p2MGAnDSMsForwardSubPhase0: DSM x component ,2.9907998058575909704e-05
p2MGAnDSMsForwardSubPhase0: DSM y component ,-4.8831255742953771914e-05
p2MGAnDSMsForwardSubPhase0: DSM z component ,2.1992999414521818835e-05
p2MGAnDSMsBackwardSubPhase0: burn index ,0.83922896809824498732
p3MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_x ,-4.5798012842169661951
p3MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_y ,12.391301889758963739
p3MGAnDSMsEphemerisPeggedUnpoweredFlyby: V_infinity_z ,7.8039247959354867135
p3MGAnDSMs: phase flight time ,1809.6841647476019261
p3MGAnDSMsEphemerisReferencedInterceptExterior: event interface state vMAG ,5.6386201342982653628
p3MGAnDSMsEphemerisReferencedInterceptExterior: event interface state vRA ,2.3449276461524206638
p3MGAnDSMsEphemerisReferencedInterceptExterior: event interface state vDEC ,0.28969283817599489339
p3MGAnDSMsEphemerisReferencedInterceptExterior: event interface state RA ,-0.79046440985364796461
p3MGAnDSMsEphemerisReferencedInterceptExterior: event interface state DEC ,-0.29693255658969297528
p3MGAnDSMsEphemerisReferencedInterceptExterior: event left state mass ,3534.530619064097209
p3MGAnDSMs: virtual chemical fuel ,228.26581662523079785
p3MGAnDSMs: virtual chemical oxidizer ,211.14588037822608158
p3MGAnDSMsForwardSubPhase0: burn index ,0.00010000000000000000479
p3MGAnDSMsForwardSubPhase0: DSM x component ,-0.3065690058318573108
p3MGAnDSMsForwardSubPhase0: DSM y component ,0.16929557965798380792
p3MGAnDSMsForwardSubPhase0: DSM z component ,0.12639313105546534644
p3MGAnDSMsBackwardSubPhase0: burn index ,0.99989999999990020196
END_TRIALX

END_JOURNEY

BEGIN_JOURNEY
#Journey name
journey_name Saturn_SOI_To_Periapse
#Journey central body name
journey_central_body Saturn
#destination list, as indices from the Universe file
destination_list -1 -1
#flyby sequence, as indices from the Universe file
sequence
#phase type
#0: MGALTS
#1: FBLTS
#2: MGALT
#3: FBLT
#4: PSBI
#5: PSFB
#6: MGAnDSMs
#7: CoastPhase
#8: SundmanCoastPhase
#9: variable (do not use)
#10 ProbeEntryPhase
#11 ControlLawThrustPhase
phase_type 2
#impulses per phase
impulses_per_phase 1
#Thrust control law
#0: Cartesian (not implemented)
#1: velocity direction
#2: anti-velocity direction
thrust_control_law 1
#Force unit magnitude control?
#0: free control magnitude
#1: force unit magnitude
#2: force zero magnitude
force_unit_magnitude_control 2
#Force fixed inertial control? All control vectors in a phase must be identical if this is selected.
force_fixed_inertial_control 0
#Override this journey's number of steps?
override_num_steps 1
#Number of time steps for this journey, if overriden
number_of_steps 20
#Journey override global duty cycle
override_duty_cycle 0
#Journey duty cycle
duty_cycle 1
#override propagator type?
override_PropagatorType 0
#propagator type
propagatorType 1
#Override global integration step size?
override_integration_step_size 0
#integration step size (s)
integration_step_size 86400
#Override journey flyby altitude?
override_flyby_altitude_bounds 0
#Lower and upper bound on journey flyby altitude, if override is active (only applies to the departure flyby, if there is one)
flyby_altitude_bounds 300 1000000
#Override journey periapse arrival altitude?
PeriapseArrival_override_altitude 1
#Lower and upper bound on journey periapse arrival altitude, if override is active (km)
PeriapseArrival_altitude_bounds 59181.318069440596446 59181.318069440596446
#PeriapseDeparture altitude bounds (in km)
PeriapseDeparture_altitude_bounds 185 185
#number of interior control points for parallel shooting phase types
num_interior_control_points 1
#coast phase match point fraction
CoastPhaseMatchPointFraction 0.9000000000000000222
#coast phase forward integration step length (seconds)
CoastPhaseForwardIntegrationStepLength 600
#coast phase backward integration step length (seconds)
CoastPhaseBackwardIntegrationStepLength 60
#Journey-end TCM magnitude (km/s)
journey_end_TCM 0
#Enable periapse burns in ephemeris pegged flybys?
enable_periapse_burns 0
#Bound the departure epoch?
bounded_departure_date 0
#does the journey have time bounds?
#0: unbounded
#1: bounded flight time
#2: bounded arrival date
#3: bounded aggregate flight time
timebounded 0
#Journey departure epoch bounds (MJD, two entries)
departure_date_bounds 0 0
#Journey wait time bounds (days)
wait_time_bounds 0 0
#Journey flight time bounds (days)
flight_time_bounds 0 0
#Journey arrival date bounds (MJD, two entries)
arrival_date_bounds 51544.5 60000
#journey departure type
#0: launch or direct insertion
#1: depart from parking orbit (you can use this one in place of a launch vehicle model, and the departure burn will be done with the EDS motor)
#2: free direct departure, i.e. do not burn to get the departure v_infinity (used for when operations about a small body are not modeled but the departure velocity is known)
#3: flyby (only valid for successive journeys)
#4: flyby with fixed v-infinity-out (only valid for successive journeys)
#5: spiral-out from circular orbit (low-thrust missions only)
#6: zero-turn flyby (for small bodies)
departure_type 2
#what are the bounds on the initial impulse for each journey in km/s\
#you can set a very high upper bound if you are using a launchy vehicle model - the optimizer will find the correct value
initial_impulse_bounds 0 6.9699999999999997513
#Force free point direct insertion burn to be along the inertial velocity vector?
force_free_point_direct_insertion_along_velocity_vector 0
#one entry for each element
departure_elements_vary_flag 0 0 0 0 0 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
departure_elements 0 0 0 0 0 0
#bounds on elements or state components, two entries for each element
departure_elements_bounds 0 0 0 0 0 0 0 0 0 0 0 0
#Reference epoch (MJD) for journey departure elements
departure_elements_reference_epoch 51544.5
#departure free point state representation (Cartesian, SphericalRADEC, SphericalAZFPA, COE, MEE, IncomingBplane, OutgoingBplane, IncomingBplaneRpTA, OutgoingBplaneRpTA)
departure_elements_state_representation 0
#reference frame for journey departure elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar, 8: SAM, 9: ObjectReferenced)
departure_elements_frame 0
#Allow journey departure free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyFreePointDepartureToPropagate 0
#upper bound on starting mass increment (negative number indicates mass drop) [kg]
maximum_starting_mass_increment 0
#lower bound on starting mass increment (negative number indicates mass drop) [kg]
minimum_starting_mass_increment 0
#starting mass increment (negative number indicates mass drop) [kg]
fixed_starting_mass_increment 0
#ending mass increment (negative number indicates mass drop) [kg]
fixed_ending_mass_increment 0
#Vary initial mass increment?
variable_mass_increment 0
#Constrain initial mass?
constrain_initial_mass 0
#If initial mass for this journey is constrained, enter the constraint value here.
maximum_initial_mass 0
#journey departure boundary class
#0: Ephemeris-pegged (default EMTG)
#1: Free point
#2: Ephemeris-referenced
#3: Periapse
departure_class 1
#journey departure ellipsoid axes (3)
departure_ellipsoid_axes 1.0000000000000000209e-08 1.0000000000000000209e-08 1.0000000000000000209e-08
#journey arrival type
#0: insertion into parking orbit (use chemical Isp)
#1: rendezvous (use chemical Isp)
#2: intercept with bounded V_infinity
#3: low-thrust rendezvous (does not work if terminal phase is not low-thrust)
#4: match final v-infinity vector
#5: match final v-infinity vector (low-thrust)
#6: capture spiral
#7: momentum transfer (kinetic impactor)
arrival_type 2
#one entry for each element
arrival_elements_vary_flag 1 1 1 0 1 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
arrival_elements 5.6634706673558454781 134.44900000000001228 16.597000000000001307 59181.318069440596446 -2.9099622677241990445e-15 4.2951567775498271679e-15
#bounds on elements or state components, two entries for each element
arrival_elements_bounds 0 5.7000000000000001776 -360 360 -90 90 0 0 -360 360 0 0
#Reference epoch (MJD) for journey arrival elements
arrival_elements_reference_epoch 2466959.7497862097807
#arrival free point state representation (Cartesian, SphericalRADEC, SphericalAZFPA, COE, MEE, IncomingBplane, OutgoingBplane, IncomingBplaneRpTA, OutgoingBplaneRpTA)
arrival_elements_state_representation 8
#reference frame for journey arrival elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar, 8: SAM, 9: ObjectReferenced)
arrival_elements_frame 0
#Allow journey arrival free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyFreePointArrivalToPropagate 0
#Bounds on this journey's final velocity (in km/s)
final_velocity 0 20 0
#Journey forced terminal coast (in days)
forced_terminal_coast 0
#Journey forced initial coast (in days)
forced_initial_coast 0
#journey arrival boundary class
#0: Ephemeris-pegged (default EMTG)
#1: Free point
#2: Ephemeris-referenced
#3: Periapse
arrival_class 3
#journey arrival ellipsoid axes (3)
arrival_ellipsoid_axes 1.0000000000000000209e-08 1.0000000000000000209e-08 1.0000000000000000209e-08
#encounter distance (from center of object) for a zero-turn flyby (km)
zero_turn_flyby_distance 1000
#encounter distance (from center of object) for an ephemeris-pegged intercept (km)
terminal_intercept_flyby_distance 1000
#Starting orbital radius for an Edelbaum escape spiral (km)
escape_spiral_starting_radius 6678
#Final orbit radius for an Edelbaum capture spiral (km)
escape_spiral_final_radius 6678
#Final orbit radius for an Edelbaum capture spiral (km)
capture_spiral_final_radius 6678
#Starting orbital radius for an Edelbaum capture spiral (km)
capture_spiral_starting_radius 6678
#Print a target spec for free point arrival at the end of this journey?
FreePointArrival_print_target_spec 1
#Journey-end delta-v (km/s)
journey_end_deltav 0
#Propulsion system for journey-end maneuver
#0: Monoprop chemical
#1: Biprop chemical
#2: Electric
journey_end_propulsion_system 0
#Which bodies are used for third-body perturbation?
#Expressed as indices in the Universe file
perturbation_bodies 1 2 3 4 5 6 7 8 9 10
#Stage after departure?
stage_after_departure 0
#Stage before arrival?
stage_before_arrival 0
#Stage after arrival?
stage_after_arrival 0
#Freeze this journey's decision variables?
freeze_decision_variables 0
#SMA (in km) for ephemeris pegged orbit insertion
ephemeris_pegged_orbit_insertion_SMA 6678
#ECC for ephemeris pegged orbit insertion
ephemeris_pegged_orbit_insertion_ECC 0
#Lower and upper bounds for ephemeris pegged orbit insertion Delta v (km/s)
ephemeris_pegged_orbit_insertion_dv_bounds 0 100
#Impact momentum enhancement factor for planetary defense (also called beta)
impact_momentum_enhancement_factor 1
#Aerodynamic drag?
perturb_drag 0
#spacecraft area (for aerodynamic drag, in m^2)
spacecraft_drag_area 70
#coefficient of drag, i.e. Cd (unitless)
coefficient_of_drag 2.2000000000000001776
#Atmospheric density model
AtmosphericDensityModelKey Exponential
#File defining atmospheric density model
AtmosphericDensityModelDataFile DoesNotExist.emtg_densityopt
#Include central body gravitational harmonics perturbations?
perturb_central_body_gravity_harmonics 0
#Maximum degree to include for central body gravitational harmonics
central_body_gravity_degree 2
#Maximum order to include for central body gravitational harmonics
central_body_gravity_order 0
#STK .grv style gravity model file
central_body_gravity_file C:/emtg/testatron/universe/gravity_files/DoesNotExist.grv
#Probe separation impulse (Ns)
probe_separation_impulse 1
#Probe mass (kg)
probe_mass 100
#one entry for each element
Probe_AEI_elements_vary_flag 0 0 0 0 0 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
Probe_AEI_elements 0 0 0 0 0 0
#bounds on elements or state components, two entries for each element
Probe_AEI_elements_bounds 0 0 0 0 0 0 0 0 0 0 0 0
#Reference epoch (MJD) for journey probe arrival elements
Probe_AEI_elements_reference_epoch 51544.5
#probe arrival free point state representation (Cartesian, SphericalRADEC, SphericalAZFPA, COE)
Probe_AEI_elements_state_representation 0
#reference frame for journey arrival elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar, 8: SAM)
Probe_AEI_elements_frame 0
#one entry for each element
Probe_End_elements_vary_flag 0 0 0 0 0 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
Probe_End_elements 0 0 0 0 0 0
#bounds on elements or state components, two entries for each element
Probe_End_elements_bounds 0 0 0 0 0 0 0 0 0 0 0 0
#Reference epoch (MJD) for journey probe arrival elements
Probe_End_elements_reference_epoch 51544.5
#probe arrival free point state representation (Cartesian, SphericalRADEC, SphericalAZFPA, COE)
Probe_End_elements_state_representation 0
#reference frame for journey arrival elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar, 8: SAM)
Probe_End_elements_frame 0
# or just final approach?
ModelProbeSecondPhase 0
#Allow probe AEI free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyProbeAEIToPropagate 0
#Allow probe end free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyProbeEndToPropagate 0
#Probe-spacecraft communication distance constraint (km)
probe_communication_distance_bounds 2000 10000
#Aerodynamic drag on probe from separation to AEI?
perturb_drag_probe_separation_to_AEI 0
#Aerodynamic drag on probe from AEI to end of probe mission?
perturb_drag_probe_AEI_to_end 0
#probe area prior to AEI (for aerodynamic drag, in m^2)
probe_drag_area_probe_separation_to_AEI 70
#probe area after AEI (for aerodynamic drag, in m^2)
probe_drag_area_probe_AEI_to_end 70
#probe coefficient of drag prior to AEI, i.e. Cd (unitless)
probe_coefficient_of_drag_probe_separation_to_AEI 2.2000000000000001776
#probe coefficient of drag after AEI, i.e. Cd (unitless)
probe_coefficient_of_drag_probe_AEI_to_end 2.2000000000000001776
#Bounds on the probe's final velocity at AEI (in km/s)
probe_AEI_velocity 0 100 0
#Bounds on the probe's final velocity at end of mission (in km/s)
probe_end_velocity 0 100 0
#probe separation to AEI match point fraction
ProbeSeparationToAEI_MatchPointFraction 0.5
#probe separation to AEI forward integration step length (seconds)
ProbeSeparationToAEI_ForwardIntegrationStepLength 86400
#probe separation to AEI backward integration step length (seconds)
ProbeSeparationToAEI_BackwardIntegrationStepLength 86400
#probe AEI to end match point fraction
ProbeAEI_to_end_MatchPointFraction 0.5
#probe AEI to end forward integration step length (seconds)
ProbeAEI_to_end_ForwardIntegrationStepLength 86400
#probe AEI to end backward integration step length (seconds)
ProbeAEI_to_end_BackwardIntegrationStepLength 86400
#Print a target spec for the probe state at the end of the first sub-phase?
Probe_AEI_print_target_spec 1
#Print a target spec for the probe state at the end of the second sub-phase?
Probe_end_print_target_spec 1
#Always print this journey's options to the .emtgopt file?
print_this_journey_options_no_matter_what 0
#Override default ephemeris output resolution?
override_ephemeris_output_resolution 0
#If overriding default ephemeris output resolution, this is the overriding value (seconds)
EphemerisOutputResolution 1

#Maneuver constraint code
#Works for absolute and relative epochs and also magnitudes
BEGIN_MANEUVER_CONSTRAINT_BLOCK
END_MANEUVER_CONSTRAINT_BLOCK


#Boundary constraint code
BEGIN_BOUNDARY_CONSTRAINT_BLOCK
END_BOUNDARY_CONSTRAINT_BLOCK


#Phase distance constraint code
BEGIN_PHASE_DISTANCE_CONSTRAINT_BLOCK
END_PHASE_DISTANCE_CONSTRAINT_BLOCK

#trial decision vector
BEGIN_TRIALX
p0MGALTFreePointFreeDirectDeparture: event left state mass ,3534.5306190655969658
p0MGALT: phase flight time ,113.2751441018681362
p0MGALTPeriapseFlybyIn: event left state VINFin ,5.5221870044480967366
p0MGALTPeriapseFlybyIn: event left state RHAin ,2.3448631012653926575
p0MGALTPeriapseFlybyIn: event left state DHAin ,0.28961725475753063996
p0MGALTPeriapseFlybyIn: event left state RPin ,119449.31806944060372
p0MGALTPeriapseFlybyIn: event left state BTHETAin ,0.88495616153254985647
p0MGALTPeriapseFlybyIn: event left state TAin ,-1.7421399999999999452e-15
p0MGALTPeriapseFlybyIn: event left state mass ,3534.5306190670971773
p0MGALT: virtual chemical fuel ,0
p0MGALT: virtual electric propellant ,0
p0MGALT: step 0 u_x ,0
p0MGALT: step 0 u_y ,0
p0MGALT: step 0 u_z ,0
p0MGALT: step 1 u_x ,0
p0MGALT: step 1 u_y ,0
p0MGALT: step 1 u_z ,0
p0MGALT: step 2 u_x ,0
p0MGALT: step 2 u_y ,0
p0MGALT: step 2 u_z ,0
p0MGALT: step 3 u_x ,0
p0MGALT: step 3 u_y ,0
p0MGALT: step 3 u_z ,0
p0MGALT: step 4 u_x ,0
p0MGALT: step 4 u_y ,0
p0MGALT: step 4 u_z ,0
p0MGALT: step 5 u_x ,0
p0MGALT: step 5 u_y ,0
p0MGALT: step 5 u_z ,0
p0MGALT: step 6 u_x ,0
p0MGALT: step 6 u_y ,0
p0MGALT: step 6 u_z ,0
p0MGALT: step 7 u_x ,0
p0MGALT: step 7 u_y ,0
p0MGALT: step 7 u_z ,0
p0MGALT: step 8 u_x ,0
p0MGALT: step 8 u_y ,0
p0MGALT: step 8 u_z ,0
p0MGALT: step 9 u_x ,0
p0MGALT: step 9 u_y ,0
p0MGALT: step 9 u_z ,0
p0MGALT: step 10 u_x ,0
p0MGALT: step 10 u_y ,0
p0MGALT: step 10 u_z ,0
p0MGALT: step 11 u_x ,0
p0MGALT: step 11 u_y ,0
p0MGALT: step 11 u_z ,0
p0MGALT: step 12 u_x ,0
p0MGALT: step 12 u_y ,0
p0MGALT: step 12 u_z ,0
p0MGALT: step 13 u_x ,0
p0MGALT: step 13 u_y ,0
p0MGALT: step 13 u_z ,0
p0MGALT: step 14 u_x ,0
p0MGALT: step 14 u_y ,0
p0MGALT: step 14 u_z ,0
p0MGALT: step 15 u_x ,0
p0MGALT: step 15 u_y ,0
p0MGALT: step 15 u_z ,0
p0MGALT: step 16 u_x ,0
p0MGALT: step 16 u_y ,0
p0MGALT: step 16 u_z ,0
p0MGALT: step 17 u_x ,0
p0MGALT: step 17 u_y ,0
p0MGALT: step 17 u_z ,0
p0MGALT: step 18 u_x ,0
p0MGALT: step 18 u_y ,0
p0MGALT: step 18 u_z ,0
p0MGALT: step 19 u_x ,0
p0MGALT: step 19 u_y ,0
p0MGALT: step 19 u_z ,0
END_TRIALX

END_JOURNEY

